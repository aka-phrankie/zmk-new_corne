#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

&soft_off { hold-time-ms = <2000>; };

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    combos { compatible = "zmk,combos"; };

    macros {
        Lbrackets: new_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LBKT>;
            label = "NEW_MACRO";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&kp ESCAPE      &kp Q  &kp W  &kp E     &kp R        &kp T                               &kp UP                &kp Y        &kp U        &kp I      &kp O    &kp P     &kp BSPC
&kp LEFT_SHIFT  &kp A  &kp S  &kp D     &kp F        &kp G                     &kp LEFT  &kp ENTER  &kp RIGHT  &kp H        &kp J        &kp K      &kp L    &kp SEMI  &kp SQT
&kp LCTRL       &kp Z  &kp X  &kp C     &kp V        &kp B        &kp SPACE              &kp DOWN              &kp N        &kp M        &kp COMMA  &kp DOT  &kp FSLH  &kp TAB
                              &kp LALT  &lt 1 SPACE  &lt 3 ENTER                                               &lt 3 ENTER  &lt 2 SPACE  &kp SPACE
            >;

            sensor-bindings = <&inc_dec_kp RIGHT_BRACKET LEFT_BRACKET>;
        };

        lower_layer {
            display-name = "NUMBER";
            bindings = <
&kp TAB  &kp N1  &kp N2  &kp N3  &kp N4       &kp N5                                      &mmv MOVE_UP                     &kp N6    &kp N7    &kp N8  &kp N9     &kp N0    &kp DELETE
&trans   &kp N4  &kp N5  &kp N6  &kp LS(TAB)  &kp TAB                     &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &kp HOME  &kp PG_UP
&trans   &kp N7  &kp N8  &kp N9  &kp N0       &kp KP_DOT    &kp C_MUTE                    &mmv MOVE_DOWN                   &trans    &trans    &trans  &trans     &kp END   &kp PG_DN
                         &kp N0  &trans       &kp CAPSLOCK                                                                 &kp INS   &trans    &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        raise_layer {
            display-name = "SYMBOL";
            bindings = <
&trans  &kp EXCL  &kp AT     &kp HASH   &kp DLLR   &kp PRCNT                             &mmv MOVE_UP                     &kp CARET  &kp AMPS   &kp ASTRK     &kp LPAR  &kp RPAR  &trans
&trans  &trans    &mkp LCLK  &mkp MCLK  &mkp RCLK  &trans                &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp MINUS  &kp EQUAL  &kp LBKT      &kp RBKT  &kp BSLH  &kp GRAVE
&trans  &trans    &trans     &trans     &trans     &Lbrackets  &trans                    &mmv MOVE_DOWN                   &kp UNDER  &kp PLUS   &kp LBRC      &kp RBRC  &kp PIPE  &kp TILDE
                             &kp R      &trans     &kp DOT                                                                &kp DOT    &trans     &kp LEFT_WIN
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            display-name = "Fn";
            bindings = <
&studio_unlock   &kp F1           &kp F2           &kp F3           &kp F4           &kp F5                                         &mmv MOVE_UP                     &kp F6        &kp F7                            &kp F8          &kp F9           &kp F10          &kp F11
&trans           &bt BT_CLR_ALL   &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &out OUT_BLE                   &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &out OUT_USB  &rgb_ug RGB_COLOR_HSB(129,14,86)  &kp UP_ARROW    &rgb_ug RGB_SAD  &rgb_ug RGB_SAI  &kp F12
&rgb_ug RGB_TOG  &rgb_ug RGB_EFF  &rgb_ug RGB_BRD  &rgb_ug RGB_BRI  &rgb_ug RGB_HUD  &rgb_ug RGB_HUI  &kp C_MUTE                    &mmv MOVE_DOWN                   &bl BL_TOG    &kp LEFT_ARROW                    &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp C_VOL_DN     &kp C_VOLUME_UP
                                                   &trans           &trans           &trans                                                                          &trans        &trans                            &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };
    };
};
